/*
GLCP Unified API Routing Services API

Allow registration of information needed for routing GLCP APIs. 

API version: v1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unifiedsdkgo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiGroupExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGroupExtended{}

// ApiGroupExtended struct for ApiGroupExtended
type ApiGroupExtended struct {
	ApplicationId string `json:"applicationId"`
	ApiGroup string `json:"apiGroup"`
	Id string `json:"id"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	Type string `json:"type"`
	Generation *int32 `json:"generation,omitempty"`
}

type _ApiGroupExtended ApiGroupExtended

// NewApiGroupExtended instantiates a new ApiGroupExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGroupExtended(applicationId string, apiGroup string, id string, type_ string) *ApiGroupExtended {
	this := ApiGroupExtended{}
	this.ApplicationId = applicationId
	this.ApiGroup = apiGroup
	this.Id = id
	this.Type = type_
	return &this
}

// NewApiGroupExtendedWithDefaults instantiates a new ApiGroupExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGroupExtendedWithDefaults() *ApiGroupExtended {
	this := ApiGroupExtended{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *ApiGroupExtended) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *ApiGroupExtended) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetApiGroup returns the ApiGroup field value
func (o *ApiGroupExtended) GetApiGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiGroup
}

// GetApiGroupOk returns a tuple with the ApiGroup field value
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetApiGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiGroup, true
}

// SetApiGroup sets field value
func (o *ApiGroupExtended) SetApiGroup(v string) {
	o.ApiGroup = v
}

// GetId returns the Id field value
func (o *ApiGroupExtended) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiGroupExtended) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApiGroupExtended) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApiGroupExtended) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ApiGroupExtended) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApiGroupExtended) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApiGroupExtended) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ApiGroupExtended) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetType returns the Type field value
func (o *ApiGroupExtended) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiGroupExtended) SetType(v string) {
	o.Type = v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *ApiGroupExtended) GetGeneration() int32 {
	if o == nil || IsNil(o.Generation) {
		var ret int32
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGroupExtended) GetGenerationOk() (*int32, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *ApiGroupExtended) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given int32 and assigns it to the Generation field.
func (o *ApiGroupExtended) SetGeneration(v int32) {
	o.Generation = &v
}

func (o ApiGroupExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGroupExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applicationId"] = o.ApplicationId
	toSerialize["apiGroup"] = o.ApiGroup
	toSerialize["id"] = o.Id
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	return toSerialize, nil
}

func (o *ApiGroupExtended) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"applicationId",
		"apiGroup",
		"id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiGroupExtended := _ApiGroupExtended{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiGroupExtended)

	if err != nil {
		return err
	}

	*o = ApiGroupExtended(varApiGroupExtended)

	return err
}

type NullableApiGroupExtended struct {
	value *ApiGroupExtended
	isSet bool
}

func (v NullableApiGroupExtended) Get() *ApiGroupExtended {
	return v.value
}

func (v *NullableApiGroupExtended) Set(val *ApiGroupExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGroupExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGroupExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGroupExtended(val *ApiGroupExtended) *NullableApiGroupExtended {
	return &NullableApiGroupExtended{value: val, isSet: true}
}

func (v NullableApiGroupExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGroupExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


